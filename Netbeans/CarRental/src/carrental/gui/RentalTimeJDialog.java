/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carrental.gui;

import java.time.YearMonth;
import java.util.Calendar;
import javax.swing.ComboBoxModel;

/**
 *
 * @author Gabor Farkas <info@gfarkas.com>
 */
public class RentalTimeJDialog extends javax.swing.JDialog {

    private int row;

    public RentalTimeJDialog(java.awt.Dialog parent, int row) {
        super(parent, true);
        initComponents();

        setLocationRelativeTo(parent);
        setTitle("Rental time manager");

        this.row = row;

        int year = Calendar.getInstance().get(Calendar.YEAR);
        yearStartJComboBox.addItem(String.valueOf(year));
        yearStartJComboBox.addItem(String.valueOf(year + 1));
        yearEndJComboBox.addItem(String.valueOf(year));
        yearEndJComboBox.addItem(String.valueOf(year + 1));

        int month = Calendar.getInstance().get(Calendar.MONTH);

        for (int i = month + 1; i <= 12; i++) {

            monthStartJComboBox.addItem(String.valueOf(i));
            monthEndJComboBox.addItem(String.valueOf(i));

        }

        int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);

        // Get the number of days in that month
        YearMonth yearMonthObject = YearMonth.of(year, month);
        int daysInMonth = yearMonthObject.lengthOfMonth();

        for (int i = day; i <= daysInMonth; i++) {

            dayStartJComboBox.addItem(String.valueOf(i));
            dayEndJComboBox.addItem(String.valueOf(i));

        }

        int hour = Calendar.getInstance().get(Calendar.HOUR_OF_DAY);

        for (int i = hour; i <= 23; i++) {

            hourStartJComboBox.addItem(String.valueOf(i) + "h");
            hourEndJComboBox.addItem(String.valueOf(i + 1) + "h");

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        yearStartJComboBox = new javax.swing.JComboBox<>();
        monthStartJComboBox = new javax.swing.JComboBox<>();
        dayStartJComboBox = new javax.swing.JComboBox<>();
        hourStartJComboBox = new javax.swing.JComboBox<>();
        yearEndJComboBox = new javax.swing.JComboBox<>();
        monthEndJComboBox = new javax.swing.JComboBox<>();
        hourEndJComboBox = new javax.swing.JComboBox<>();
        dayEndJComboBox = new javax.swing.JComboBox<>();
        saveJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("From:");

        jLabel2.setText("To:");

        yearStartJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearStartJComboBoxActionPerformed(evt);
            }
        });

        yearEndJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearEndJComboBoxActionPerformed(evt);
            }
        });

        saveJButton.setText("Save rental time");

        cancelJButton.setText("Cancel");
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(yearEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(monthEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dayEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hourEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(yearStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(monthStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dayStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hourStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(saveJButton)
                    .addComponent(cancelJButton))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(yearStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourStartJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveJButton))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourEndJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cancelJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed

        setVisible(false);

    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void yearStartJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearStartJComboBoxActionPerformed

        if (yearStartJComboBox.getSelectedItem() != null
                && yearEndJComboBox.getSelectedItem() != null) {

            if (Integer.parseInt(yearStartJComboBox.getSelectedItem().toString())
                    > Integer.parseInt(yearEndJComboBox.getSelectedItem().toString())) {

                yearEndJComboBox.removeAllItems();
                yearEndJComboBox.addItem((String) yearStartJComboBox.getSelectedItem());

            } else {

                int year = Calendar.getInstance().get(Calendar.YEAR);
                yearEndJComboBox.removeAllItems();
                yearEndJComboBox.addItem(String.valueOf(year));
                yearEndJComboBox.addItem(String.valueOf(year + 1));

            }

            if (yearStartJComboBox.getSelectedItem().toString().equals(String.valueOf(Calendar.getInstance().get(Calendar.YEAR)))) {

                monthStartJComboBox.removeAllItems();

                int month = Calendar.getInstance().get(Calendar.MONTH);

                for (int i = month + 1; i <= 12; i++) {

                    monthStartJComboBox.addItem(String.valueOf(i));
                    monthEndJComboBox.addItem(String.valueOf(i));

                }

            } else {

                monthStartJComboBox.removeAllItems();

                for (int i = 1; i <= 12; i++) {

                    monthStartJComboBox.addItem(String.valueOf(i));
                    monthEndJComboBox.addItem(String.valueOf(i));

                }

            }

        }

    }//GEN-LAST:event_yearStartJComboBoxActionPerformed

    private void yearEndJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearEndJComboBoxActionPerformed

        if (yearStartJComboBox.getSelectedItem() != null
                && yearEndJComboBox.getSelectedItem() != null) {

            if (Integer.parseInt(yearStartJComboBox.getSelectedItem().toString())
                    > Integer.parseInt(yearEndJComboBox.getSelectedItem().toString())) {

                yearEndJComboBox.removeAllItems();
                yearEndJComboBox.addItem((String) yearStartJComboBox.getSelectedItem());

            } else {

                int year = Calendar.getInstance().get(Calendar.YEAR);
                yearEndJComboBox.removeAllItems();
                yearEndJComboBox.addItem(String.valueOf(year));
                yearEndJComboBox.addItem(String.valueOf(year + 1));

            }

        }
    }//GEN-LAST:event_yearEndJComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentalTimeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentalTimeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentalTimeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentalTimeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelJButton;
    private javax.swing.JComboBox<String> dayEndJComboBox;
    private javax.swing.JComboBox<String> dayStartJComboBox;
    private javax.swing.JComboBox<String> hourEndJComboBox;
    private javax.swing.JComboBox<String> hourStartJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> monthEndJComboBox;
    private javax.swing.JComboBox<String> monthStartJComboBox;
    private javax.swing.JButton saveJButton;
    private javax.swing.JComboBox<String> yearEndJComboBox;
    private javax.swing.JComboBox<String> yearStartJComboBox;
    // End of variables declaration//GEN-END:variables
}
