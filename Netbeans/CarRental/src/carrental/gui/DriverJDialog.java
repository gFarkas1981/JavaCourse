/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carrental.gui;

import carrental.model.Driver;
import carrental.model.IModel;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabor Farkas <info@gfarkas.com>
 */
public class DriverJDialog extends javax.swing.JDialog implements TableModelListener {

    private IModel model;
    private List<Driver> drivers;
    private DefaultTableModel dtm;

    public DriverJDialog(java.awt.Frame parent, IModel model) {

        super(parent, true);
        initComponents();

        this.model = model;

        setLocationRelativeTo(parent);
        setTitle("Driver manager");

        try {

            drivers = model.getAllDriver();

        } catch (NullPointerException ex) {

        } catch (SQLException ex) {

            MainWindow.networkError(this, ex);

        }

        dtm = (DefaultTableModel) driversJTable.getModel();
        dtm.addTableModelListener(this);

        updateTable();

    }

    private void updateTable() {

        dtm = (DefaultTableModel) driversJTable.getModel();
        dtm.getDataVector().clear();
        dtm.fireTableDataChanged();

        for (Driver driver : drivers) {

            Vector row = new Vector();

            try {

                driver = (Driver) model.getDriverMap().get(driver.getId());

            } catch (SQLException ex) {

                MainWindow.networkError(this, ex);

            }

            row.add(driver.getId());
            row.add(driver.getTitle());
            row.add(driver.getFirstname());
            row.add(driver.getSurname());
            row.add(driver.getEmail());
            row.add(driver.getPhonenumber());
            row.add(driver.getFlightnumber());

            dtm.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        driversJTable = new javax.swing.JTable();
        addDriverJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        closeJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        driversJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "title", "firstname", "surname", "email", "phonenumber", "flightnumber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(driversJTable);

        addDriverJButton.setText("Add driver");
        addDriverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDriverJButtonActionPerformed(evt);
            }
        });

        removeJButton.setText("Remove selected drivers");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        closeJButton.setText("Close");
        closeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeJButton)
                    .addComponent(addDriverJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeJButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addDriverJButton, closeJButton, removeJButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addDriverJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(removeJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeJButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addDriverJButton, closeJButton, removeJButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addDriverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDriverJButtonActionPerformed

        Vector row = new Vector();
        Driver driver = new Driver("", "", "", "", "", "");
        int id = 0;

        try {

            id = model.addDriver(driver);
            

        } catch (SQLException ex) {

            MainWindow.networkError(this, ex);

        }

        row.add(0, id);
        dtm = (DefaultTableModel) driversJTable.getModel();
        dtm.addRow(row);


    }//GEN-LAST:event_addDriverJButtonActionPerformed

    private void closeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeJButtonActionPerformed

        try {

            Map<Integer, Driver> driverMap = model.getDriverMap();

            for (Map.Entry<Integer, Driver> entry : driverMap.entrySet()) {

                if (((Driver) entry.getValue()).getFirstname().equals("")
                        || ((Driver) entry.getValue()).getSurname().equals("")) {

                    model.deleteDriver(entry.getValue());

                }

            }

        } catch (SQLException ex) {

            MainWindow.networkError(this, ex);

        }

        setVisible(false);

    }//GEN-LAST:event_closeJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed

        dtm = (DefaultTableModel) driversJTable.getModel();

        try {

            int[] selectedRows = driversJTable.getSelectedRows();
            int[] ids = new int[selectedRows.length];

            if (selectedRows.length > 0) {
                for (int i = selectedRows.length - 1; i >= 0; i--) {

                    ids[i] = (int) dtm.getValueAt(selectedRows[i], 0);

                    if (ids[i] != 0) {

                        dtm.removeRow(selectedRows[i]);
                        Driver driver = model.getDriverMap().get(ids[i]);
                        model.deleteDriver(driver);

                    } else {

                        JOptionPane.showMessageDialog(rootPane, "You can't delete this!");

                    }

                }

            }

        } catch (SQLException ex) {

            MainWindow.networkError(this, ex);

        }

    }//GEN-LAST:event_removeJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DriverJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DriverJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DriverJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DriverJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDriverJButton;
    private javax.swing.JButton closeJButton;
    private javax.swing.JTable driversJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeJButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {

        if (e.getType() == TableModelEvent.UPDATE
                && e.getFirstRow() >= 0 && e.getColumn() >= 0) {

            int rowIndex = e.getFirstRow();
            int columnIndex = e.getColumn();

            Object newValue = dtm.getValueAt(rowIndex, columnIndex);

            try {

                drivers = model.getAllDriver();

            } catch (SQLException ex) {

                MainWindow.networkError(this, ex);

            }

            Driver driver = drivers.get(rowIndex);

            switch (columnIndex) {

                case 1:
                    driver.setTitle((String) newValue);
                    break;

                case 2:
                    driver.setFirstname((String) newValue);
                    break;

                case 3:
                    driver.setSurname((String) newValue);
                    break;

                case 4:
                    driver.setEmail((String) newValue);
                    break;

                case 5:
                    driver.setPhonenumber((String) newValue);
                    break;

                case 6:
                    driver.setFlightnumber((String) newValue);
                    break;

            }

            try {

                model.updateDriver(driver);
                drivers = model.getAllDriver();

            } catch (SQLException ex) {

                MainWindow.networkError(this, ex);

            }

        }

    }

}
